{"version":3,"file":"public/javascripts/app.js","sources":["app/src/controls.coffee","app/src/main.coffee","app/src/model.coffee"],"names":[],"mappings":"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","sourcesContent":["class AirPollutionControls\n  setupCompleted: false\n  setup: ->\n    if @setupCompleted\n      $(\"#controls\").show()\n    else\n      # do other stuff\n      @setupGraph()\n      @setupPlayback()\n      @setupSliders()\n\n      $(\"#controls\").show()\n      @setupCompleted = true\n\n  pollutionGraph: null\n  setupGraph: ->\n    if $(\"#output-graphs\").length == 0 then return\n\n\n    # ### begin copy/pasted block; how to modularize?\n\n    appendKeyToGraph = (graphId, top, labelInfo) ->\n      $graph = $ \"##{graphId}\"\n      $graph.append '<a href=\"#\" class=\"show-key\">show key</a>'\n      $graph.find('.show-key').click ->\n        unless $(\"##{graphId}-key\").length > 0\n          $key = $(\"<div id=\\\"#{graphId}-key\\\" class=\\\"key\\\"><a class=\\\"icon-remove-sign icon-large\\\"></a><canvas></canvas></div>\").appendTo($(document.body)).draggable()\n          canvas = $key.find('canvas')[0]\n          $key.height 18 * (labelInfo.length + 1)\n          canvas.height = $key.outerHeight()\n          canvas.width = $key.outerWidth()\n          drawKey $key.find('canvas')[0], labelInfo\n\n        $key = $ \"##{graphId}-key\"\n        $key.css\n          left: '370px',\n          top: \"#{top}px\"\n        .show()\n        .on 'click', 'a', ->\n          $(this).parent().hide()\n\n    # Called by appendKeyToGraph to draw the actual lines\n    drawKey = (canvas, labelInfo) ->\n      # center the lines verticaly\n      y = 0.5 * (canvas.height - 20 * (labelInfo.length - 1))\n      ctx = canvas.getContext '2d'\n      ctx.fillStyle = 'black'\n      ctx.font = '12px \"Helvetica Neue\", Helvetica, sans-serif'\n      ctx.lineWidth = 2\n      for label in labelInfo\n        ctx.strokeStyle = \"rgb(#{label.color.join(',')})\"\n        ctx.beginPath()\n        ctx.moveTo 10, y\n        ctx.lineTo 60, y\n        ctx.stroke()\n        ctx.fillText label.label, 70, y + 3\n        y += 20\n\n    # ### end copy/pasted block\n\n\n    ABM.model.graphSampleInterval = 10\n    defaultOptions =\n      title:  \"Primary (brown), Secondary (orange) Pollutants\"\n      xlabel: \"Time (ticks)\"\n      ylabel: \"AQI\"\n      xmax:   2100\n      xmin:   0\n      ymax:   300\n      ymin:   0\n      xTickCount: 7\n      yTickCount: 10\n      xFormatter: \"0f\"\n      yFormatter: \"0f\"\n      sample: 10\n      realTime: true\n      fontScaleRelativeToParent: true\n      dataColors: [\n         AirPollutionModel.pollutantColors.primary,\n         AirPollutionModel.pollutantColors.secondary\n      ]\n\n    @pollutionGraph = LabGrapher '#pollution-graph', defaultOptions\n\n    labelInfo = [\n      { color: AirPollutionModel.pollutantColors.primary, label: \"Primary Pollutants\" },\n      { color: AirPollutionModel.pollutantColors.secondary, label: \"Secondary Pollutants\" }\n    ]\n\n    appendKeyToGraph 'pollution-graph', 20, labelInfo\n\n    # start the graph at 0,0\n    @pollutionGraph.addSamples [[0],[0]]\n\n    # hack (for now) to make y-axis non-draggable\n    $(\".draggable-axis[x=24]\").css(\"cursor\",\"default\").attr(\"pointer-events\", \"none\")\n    $(\".y text\").css(\"cursor\", \"default\")\n\n    $(document).on AirPollutionModel.GRAPH_INTERVAL_ELAPSED, =>\n      p = ABM.model.primaryAQI()\n      s = ABM.model.secondaryAQI()\n      @pollutionGraph.addSamples [[p], [s]]\n      $(\"#raw-primary\").text(ABM.model.primary.length)\n      $(\"#raw-secondary\").text(ABM.model.secondary.length)\n      $(\"#aqi-primary\").text(p)\n      $(\"#aqi-secondary\").text(s)\n\n  setupPlayback: ->\n      $(\".icon-pause\").hide()\n      $(\".icon-play\").show()\n      $(\"#controls\").show()\n      $(\"#play-pause-button\").button()\n      .click =>\n        @startStopModel()\n      $(\"#reset-button\").button()\n      .click =>\n        @resetModel()\n      $(\"#playback\").buttonset()\n\n  setupSliders: ->\n    $(\"#wind-slider\").slider\n      orientation: 'horizontal'\n      min: -100\n      max: 100\n      step: 10\n      value: ABM.model.windSpeed\n      slide: (evt, ui)->\n        ABM.model.setWindSpeed ui.value\n        if ui.value > 0\n          opacity = 0.5 - (ui.value/60)\n          $(\"#lower-air-temperature\").stop().animate({opacity: opacity})\n        else\n          $(\"#lower-air-temperature\").stop().animate({opacity: 1})\n\n    $(\"#cars-slider\").slider\n      orientation: 'horizontal'\n      min: 0\n      max: 10\n      step: 1\n      value: ABM.model.getNumCars()\n      slide: (evt, ui)->\n        ABM.model.setNumCars ui.value\n\n    $(\"#sunlight-slider\").slider\n      orientation: 'horizontal'\n      min: 0\n      max: 10\n      step: 1\n      value: ABM.model.sunlightAmount\n      slide: (evt, ui)->\n        ABM.model.setSunlight ui.value\n      change: (evt, ui)->\n        ABM.model.setSunlight ui.value\n\n    $(\"#rain-slider\").slider\n      orientation: 'horizontal'\n      min: 0\n      max: 6\n      step: 1\n      value: ABM.model.rainRate\n      slide: (evt, ui)->\n        ABM.model.setRainRate ui.value\n      change: (evt, ui)->\n        ABM.model.setRainRate ui.value\n\n    $(\"#cars-pollution-slider\").slider\n      orientation: 'horizontal'\n      min: 0\n      max: 100\n      step: 5\n      value: ABM.model.carPollutionRate\n      slide: (evt, ui)->\n        ABM.model.carPollutionRate = ui.value\n\n    $(\"#cars-pollution-control-slider\").slider\n      orientation: 'horizontal'\n      min: 0\n      max: 100\n      step: 5\n      value: 100 - ABM.model.carPollutionRate\n      slide: (evt, ui)->\n        ABM.model.carPollutionRate = 100 - ui.value\n\n    $(\"#cars-electric-slider\").slider\n      orientation: 'horizontal'\n      min: 0\n      max: 100\n      step: 10\n      value: ABM.model.electricCarPercentage\n      slide: (evt, ui)->\n        ABM.model.electricCarPercentage = ui.value\n\n    $(\"#factories-slider\").slider\n      orientation: 'horizontal'\n      min: 0\n      max: 5\n      step: 1\n      value: ABM.model.getNumFactories()\n      slide: (evt, ui)->\n        ABM.model.setNumFactories ui.value\n\n    $(\"#factories-pollution-slider\").slider\n      orientation: 'horizontal'\n      min: 0\n      max: 100\n      step: 5\n      value: ABM.model.factoryPollutionRate\n      slide: (evt, ui)->\n        ABM.model.factoryPollutionRate = ui.value\n\n    $(\"#factories-pollution-control-slider\").slider\n      orientation: 'horizontal'\n      min: 0\n      max: 100\n      step: 5\n      value: 100 - ABM.model.factoryPollutionRate\n      slide: (evt, ui)->\n        ABM.model.factoryPollutionRate = 100 - ui.value\n\n    $(\"#temperature-slider\").slider\n      orientation: 'horizontal'\n      min: 0\n      max: 100\n      step: 10\n      value: ABM.model.temperature\n      slide: (evt, ui)->\n        ABM.model.temperature = ui.value\n\n  startStopModel: ->\n    @stopModel() unless @startModel()\n\n  stopModel: ->\n    if ABM.model.anim.animStop\n      return false\n    else\n      ABM.model.stop()\n      $(\".icon-pause\").hide()\n      $(\".icon-play\").show()\n      return true\n\n  startModel: ->\n    if ABM.model.anim.animStop\n      ABM.model.start()\n      $(\".icon-pause\").show()\n      $(\".icon-play\").hide()\n      return true\n    else\n      return false\n\n  resetModel: ->\n    @stopModel()\n    $(\".icon-pause\").hide()\n    $(\".icon-play\").show()\n\n    @pollutionGraph.reset()\n    @pollutionGraph.addSamples [[0],[0],[0],[0]]\n\n    setTimeout ->\n      ABM.model.reset()\n    , 10\n\nwindow.AirPollutionControls = AirPollutionControls\n","require 'src/model'\nrequire 'src/controls'\n","class AirPollutionModel extends ABM.Model\n  @GRAPH_INTERVAL_ELAPSED: 'graph-interval-lapsed'\n\n  @pollutantColors =\n    primary: [102, 73, 53]\n    secondary: [244, 121, 33]\n\n  LEFT: ABM.util.degToRad 180\n  RIGHT: 0\n  UP: ABM.util.degToRad 90\n  DOWN: ABM.util.degToRad 270\n  PI2: Math.PI * 2\n  FACTORY_POLLUTION_SPAWN_OFFSETS: [\n    {x: 133, y:   3},\n    {x: 122, y:  -5},\n    {x: 106, y: -15},\n    {x:  93, y: -19}\n  ]\n  FACTORY_SPAWN_POS: [\n    {x: 160, y: 160, size: 1},\n    {x: 100, y: 100, size: 0.5},\n    {x: 240, y: 120, size: 0.8},\n    {x: 320, y: 120, size: 0.5},\n    {x:  90, y: 110, size: 0.3}\n  ]\n  CAR_SPAWN: null\n\n  includeSunlight: true\n  includeInversionLayer: false\n\n  mountainsX: 410\n  oceanX: 120\n  landY: 85\n  inversionY: 190\n  rainMax: 350\n\n  graphSampleInterval: 10\n\n  windSpeed: 0\n  maxNumCars: 10\n  maxNumFactories: 5\n  factoryDensity: 5\n  carPollutionRate: 60\n  electricCarPercentage: 25\n  factoryPollutionRate: 100\n  raining: false\n  temperature: 50\n\n  inversionStrength: 0\n\n  sunlightAmount: 6\n  rainRate: 3\n  nextRainEnd: 0\n\n  constructor: ->\n    super\n    @setNumFactories 0\n    @setRootVars()\n\n  setup: ->\n    @anim.setRate 50, false\n    @setFastPatches()\n    @patches.usePixels true\n    @setTextParams {name: \"drawing\"}, \"10px sans-serif\"\n    @setLabelParams {name: \"drawing\"}, [255,255,255], [0,-20]\n\n    @patches.importColors \"img/air-pollution-bg-mask.png\", => @setupCars()\n    @patches.importDrawing \"img/air-pollution-bg.png\"\n\n    @setCacheAgentsHere()\n\n    ['sedan-left-side', 'sedan-right-side',\n     'sedan-front-quarter', 'sedan-rear-quarter',\n     'sedan-front', 'sedan-rear'].forEach (shapeName) ->\n\n      img = document.getElementById shapeName.replace /-.*-side/, '-side'\n      flip = (shapeName.indexOf('-right-side') > 0) or (shapeName.indexOf('-front-quarter') > 0)\n\n      ABM.shapes.add shapeName, false, (ctx) ->\n        ctx.scale (if flip then -1 else 1), -1\n        ctx.translate 0, -img.height\n        if flip then ctx.translate -img.width, 0\n        ctx.drawImage img, 0, 0\n\n    factoryImg = document.getElementById('factory-sprite')\n\n    ABM.shapes.add \"factory\", false, (ctx)=>\n      ctx.scale(-1, 1)\n      ctx.rotate @LEFT\n      ctx.drawImage(factoryImg, 0, 0)\n    ABM.shapes.add \"pollutant\", false, (ctx)=>\n      ctx.arc -0.5, -0.5, 0.5, 0, @PI2, false\n      ctx.arc 0.5, -0.5, 0.5, 0, @PI2, false\n      ctx.arc 0, 0.5, 0.5, 0, @PI2, false\n      ctx.fill()\n\n    @agentBreeds \"wind cars factories primary secondary rain sunlight\"\n\n    @setupFactories()\n    @setupWind()\n    @setupPollution()\n    @setupRain()\n    @setupSunlight() if @includeSunlight\n\n    @nextRainEnd = 0\n    @raining = false\n\n    @draw()\n    @refreshPatches = false\n\n  reset: ->\n    super\n    @setup()\n    @anim.draw()\n\n  step: ->\n    @moveWind()\n    @moveCars()\n    @movePollution()\n    @pollute()\n\n    @moveAndEmitSunlight() if @includeSunlight\n    @moveRain()\n    @checkForRain()\n\n    @notifyGraphs() if @anim.ticks % @graphSampleInterval is 0\n\n    return\n\n  setupWind: ->\n    @wind.setDefaultSize 5\n    @wind.setDefaultColor [0, 0, 255, 0.2]\n    @wind.setDefaultShape \"arrow\"\n    @wind.setDefaultHidden true\n    @wind.setDefaultHeading 0\n\n    @wind.create 30, (w)=>\n      row = Math.floor((@wind.length-1) / 5)\n      x = ((@wind.length-1) % 5) * 90 + (row * 30)\n      y = row * 30 + 10\n      w.moveTo @patches.patchXY(x,y)\n\n\n  setupCars: ->\n    @cars.setDefaultSize 1\n    tracks = []\n\n    p = ABM.patches.patchXY ABM.patches.maxX, ABM.patches.maxY\n\n    for i in [0..1]\n      until p.color[0] ==  255 and p.color[1] == 0\n        p = p.n[1]\n        break if p.y < 1\n\n      tracks[i] = @followTrack p\n      p = p.n[1]\n\n    # The first track (track[0]) \"starts\" at the edge and proceeds to the city.\n    # Reverse the second track, so it \"starts\" at the city and proceeds to the edge.\n    tracks[1].reverse()\n\n    @tracks = tracks.map (track, i) ->\n      headingLeft = i is 0\n      [yMin, yMax] = [track[0].y, track[track.length-1].y].sort (a, b) -> a - b\n\n      track.map (p) ->\n        dist = (p.y - yMin) / (yMax - yMin)\n        distsq = dist*dist\n\n        {\n          patch:\n            p\n          dwellTime:\n            1 + Math.ceil 5 * distsq\n          scale:\n            1 - 0.9 * distsq\n          shapeSuffix:\n            if p.color[1] > 100\n              if headingLeft then 'rear-quarter' else 'front-quarter'\n            else if p.color[2] > 100\n              if headingLeft then 'rear' else 'front'\n            else\n              if headingLeft then 'left-side' else 'right-side'\n        }\n\n    @cars.create 1, (car) =>\n      car.track = @tracks[0]\n      car.moveTo car.track[0].patch\n\n    @cars.create 1, (car) =>\n      car.track = @tracks[1]\n      car.moveTo car.track[0].patch\n\n\n  followTrack: (p) ->\n    track = []\n    reversed = false\n\n    while p.color[0] > 50\n      track.push p\n\n      # Basic line following. We have a 1-px, non-aliased colored line to follow.\n      #\n      # Search \"forward leading\" neighbors if we haven't gone around the bend, \"backwards leading\"\n      # neighbors if we have. Never search both sets at the same time or we could get stuck in an\n      # infinite loop taking one step forward, then one step back.\n\n      neighbors = if reversed then [4, 7, 6, 5] else [3, 5, 6, 7]\n      patches = (p.n[i] for i in neighbors)\n      reds = patches.map (p) -> p.color[0]\n      indexOfReddest = reds.indexOf Math.max.apply(null, reds)\n      p = patches[indexOfReddest]\n\n      # The line is such that the first time we follow a pixel into the northeast quadrant, that\n      # means we've gone around the bend and only travel to the right until the end of the road.\n      if indexOfReddest == 3 and not reversed then reversed = true\n\n    track\n\n\n  setupFactories: ->\n    @factories.setDefaultSize 1\n    @factories.setDefaultHeading @LEFT\n    @factories.setDefaultShape \"factory\"\n    @factories.setDefaultColor [0,0,0]\n    @factories.setDefaultHidden true\n\n    @factories.create @maxNumFactories, (f)=>\n      pos = @FACTORY_SPAWN_POS[@factories.length-1]\n      f.moveTo @patches.patchXY pos.x, pos.y\n      f.size = pos.size\n      f.createTick = @anim.ticks || 0\n\n    @setNumFactories 1\n\n  setupPollution: ->\n    @primary.setDefaultSize 3\n    @primary.setDefaultHeading @UP\n    @primary.setDefaultShape \"circle\"\n    @primary.setDefaultColor AirPollutionModel.pollutantColors.primary\n    @primary.setDefaultHidden false\n\n    @secondary.setDefaultSize 3\n    @secondary.setDefaultHeading @UP\n    @secondary.setDefaultShape \"circle\"\n    @secondary.setDefaultColor AirPollutionModel.pollutantColors.secondary\n    @secondary.setDefaultHidden false\n\n  setupRain: ->\n    # Create rain which falls according to wind speed.\n    @rain.create 220, (c)=>\n      x = ABM.util.randomInt(@world.maxX - @world.minX) + @world.minX\n      y = ABM.util.randomInt(@rainMax - @world.minY) + @world.minY\n      c.moveTo @patches.patchXY(x,y)\n      c.heading = @DOWN\n      c.size = 2\n      c.shape = \"circle\"\n      c.color = [0, 0, 128]\n      c.hidden = true\n\n  setupSunlight: ->\n    @sunlight.setDefaultSize 2\n    @sunlight.setDefaultHeading Math.PI*7/4\n    @sunlight.setDefaultShape \"circle\"\n    @sunlight.setDefaultColor [255,255,0]\n    @sunlight.setDefaultHidden false\n\n  setWindSpeed: (speed)->\n    @windSpeed = speed\n    for w in @wind\n      w.hidden = (speed is 0)\n      w.size = Math.abs(@_intSpeed(10)) + 5\n      w.heading = if speed >= 0 then 0 else @LEFT\n\n    for r in @rain\n      r.heading = @DOWN + ABM.util.degToRad(@windSpeed/2)\n\n    if speed <= 0\n      @inversionStrength = 0\n    else\n      @inversionStrength = speed*4.5 / 100\n    @draw() if @anim.animStop\n\n  setNumCars: (n) ->\n\n  getNumVisible: (xs) -> xs.filter((x) -> not x.hidden).length\n\n  getNumCars: -> @getNumVisible @cars\n\n  setNumFactories: (n)->\n    for i in [0...(@factories.length)]\n      f = @factories[i]\n      f.hidden = (i >= n)\n\n    @draw() if @anim.animStop\n\n  getNumFactories: -> @getNumVisible @factories\n\n  moveWind: ->\n    speed = @_intSpeed(15)\n    for w in @wind\n      y = w.y\n      x = w.x+speed\n      if x > @mountainsX\n        x = x-@mountainsX\n      else if x < 0\n        x = x+@mountainsX\n      w.moveTo @patches.patchXY x, y\n\n  moveCars: ->\n    for car in @cars\n      car.trackIndex ?= 0\n      car.ttlAtPatch ?= 1\n\n      continue unless --car.ttlAtPatch is 0\n\n      if ++car.trackIndex is car.track.length then car.trackIndex = 0\n      patchInfo = car.track[car.trackIndex]\n\n      car.moveTo patchInfo.patch\n      car.ttlAtPatch = patchInfo.dwellTime\n      car.size = patchInfo.scale\n      car.shape = 'sedan-' + patchInfo.shapeSuffix\n    null\n\n  movePollution: ->\n    pollutionToRemove = []\n\n    for a in @primary\n      if @_movePollutionAgent(a)\n        pollutionToRemove.push a\n\n    for a in @secondary\n      if @_movePollutionAgent(a)\n        pollutionToRemove.push a\n\n    for a in pollutionToRemove\n      a.die()\n\n  _movePollutionAgent: (a)->\n    u = ABM.util\n\n    # First, do a basic movement based on a randomly drifting base heading,\n    # with speed determined by the turbulence of the model. Keep a.heading in range [-pi, pi]\n    a.heading += u.randomCentered(Math.PI/9)\n    a.heading -= (2 * Math.PI) if a.heading > Math.PI\n    a.heading += (2 * Math.PI) if a.heading < -Math.PI\n\n    if @includeInversionLayer\n      if (@inversionY-10) < a.p.y <= @inversionY\n        if 0 < a.heading < Math.PI\n          trapProb = @inversionStrength - (@inversionY - a.p.y) * (@inversionStrength/10)\n          if Math.random() < trapProb\n            a.heading -= Math.PI\n\n    speed = (@temperature+1)/250 # TODO Base this on some turbulence factor!\n    a.forward speed\n    return true if @_shouldRemovePollution a\n\n    # Now move horizontally based on wind speed, which can be reduced by the patch color (derived\n    # from the mask image.) The mask is used to simulate blockage of the airflow by the mountains.\n    distance = (@windSpeed / 100) * (1 - a.p.color[0] / 255)\n    a.setXY a.x + distance, a.y\n\n    return true if @_shouldRemovePollution a\n\n    # Now move vertically based on temperature. The higher the temp, the more upward motion.\n    if not @includeInversionLayer\n      a.setXY a.x, a.y + Math.pow(2, (@temperature-130)/20)\n      @_resetHeading a\n\n    return false\n\n  _resetHeading: (a)->\n    if a.y <= 20\n      a.heading = u.randomFloat2(Math.PI/4, Math.PI*3/4)\n    else if a.y >= 340\n      a.heading = u.randomFloat2(-Math.PI/4, -Math.PI*3/4)\n\n  _shouldRemovePollution: (a)->\n    return (a.x < @world.minX + 1 or a.x > @world.maxX - 1 or a.y < @world.minY + 1 or a.y > @world.maxX - 1)\n\n  _killPollutionOnPatch: (p)->\n    for a in p.agentsHere()\n      if a? and (a.breed is @primary or a.breed is @secondary)\n        a.die()\n\n  setRainRate: (@rainRate) ->\n    @nextRainEnd = 0\n    @checkForRain(@rainRate is 6)\n\n  checkForRain: (force=false) ->\n    if @anim.ticks > @nextRainEnd or force\n      @nextRainStart = @anim.ticks + u.randomInt(300) + 1800 - (@rainRate*300)\n      if force then @nextRainStart = @anim.ticks + 10\n\n      @nextRainEnd =  u.randomInt(130) + (30 * @rainRate)\n      @nextRainEnd += if @raining then @anim.ticks else @nextRainStart\n\n    @startRain() if @anim.ticks is @nextRainStart\n    @stopRain() if @anim.ticks is @nextRainEnd\n\n  moveRain: ->\n    if @raining\n      for r in @rain\n        continue if r.hidden\n        for p in @patches.patchRect(r.p, 3, 3, true)\n          @_killPollutionOnPatch p\n        r.forward 2\n        if r.y > @rainMax\n          r.setXY r.x, @rainMax\n\n  startRain: ->\n    return if @raining\n\n    for r in @rain\n      r.hidden = false\n\n    @raining = true\n    @nextRainStart = 0\n\n  stopRain: ->\n    return unless @raining\n\n    for r in @rain\n      r.hidden = true\n\n    @raining = false\n    @nextRainEnd = 0\n\n  _convertPollutionOnPatch: (p)->\n    converted = false\n    for a in p.agentsHere()\n      if a? and a.breed is @primary\n        if u.randomInt(4) is 0             # 25% of the time generate a new secondary\n          p.sprout 1, @secondary, (_a)->\n            _a.heading = Math.PI/2\n        else                              # else simply convert to secondary\n          newA = a.changeBreed(@secondary)[0]\n          newA.heading = a.heading\n        converted = true\n    return converted\n\n  setSunlight: (amount) ->\n    @sunlightAmount = amount\n\n  moveAndEmitSunlight: ->\n    interval = 21 - (@sunlightAmount * 2)\n    interval = 30 if @raining\n    if @anim.ticks % interval is 0\n      @sunlight.create 1, (s)=>\n        [x,y] = @randomLocationFromNWCorner()\n        s.setXY x, y\n\n    toKill = []\n    for s in @sunlight\n      converted = false\n      for p in @patches.patchRect(s.p, 2, 2, true)\n        converted ||= @_convertPollutionOnPatch p\n\n      if converted or s.x + 2 > @world.maxX or s.x - 2 < @world.minX or s.y - 2 < @world.minY\n        toKill.push s\n      else\n        s.forward 2\n\n    for s in toKill\n      s.die()\n\n  randomLocationFromNWCorner: ->\n    loc = u.randomInt (@world.width + @world.height - @landY)\n    if loc < @world.width\n      return [loc, @world.maxY]\n    else\n      return [2, (@landY + loc - @world.width)]\n\n  pollute: ->\n    for c in @cars\n      if c? and !c.hidden\n        if ABM.util.randomInt(3000) < @carPollutionRate and ABM.util.randomInt(100) > @electricCarPercentage\n            @primary.create 1, (p)=>\n              x = if c.heading is 0 then c.x-37 else c.x+37\n              p.moveTo @patches.patchXY x, c.y-10\n\n    for f in @factories\n      if f? and !f.hidden\n        if ABM.util.randomInt(2500) < @factoryPollutionRate\n          @primary.create 1, (p)=>\n            offset = @FACTORY_POLLUTION_SPAWN_OFFSETS[ABM.util.randomInt(@FACTORY_POLLUTION_SPAWN_OFFSETS.length)]\n            p.moveTo @patches.patchXY f.x + Math.round(offset.x * f.size), f.y + Math.round(offset.y * f.size)\n\n  notifyGraphs: ->\n    $(document).trigger AirPollutionModel.GRAPH_INTERVAL_ELAPSED\n\n  primaryAQI: ->\n    p = @primary.length\n    # TODO Better coversion from raw pollutants to AQI\n    return p\n\n  secondaryAQI: ->\n    p = @secondary.length\n    # TODO Better coversion from raw pollutants to AQI\n    return p\n\n  _intSpeed: (divisor)->\n    speed = @windSpeed/divisor\n    return if @windSpeed < 0 then Math.floor(speed) else Math.ceil(speed)\n\nwindow.AirPollutionModel = AirPollutionModel\n"]}